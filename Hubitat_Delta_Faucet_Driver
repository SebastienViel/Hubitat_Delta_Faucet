import groovy.json.JsonSlurper
import groovy.transform.Field

metadata {
    definition(
        name: "Delta Faucet Driver",
        namespace: "SebastienViel",
        author: "SÃ©bastien Viel and TomW",
        importUrl: "https://raw.githubusercontent.com/SebastienViel/Hubitat_Delta_Faucet/main/Hubitat_Delta_Faucet_Driver") {

        capability "Switch"
        
        command "saveToken", ["token"]
    }
}

preferences {
    input("delta_device_id", "text", title: "Delta Device ID", description: "Enter Delta Device ID", defaultValue: "", required: true, displayDuringSetup: true)
    input(name: "logEnable", type: "bool", title: "Enable debug logging", defaultValue: true)
}

def installed() {
    log.debug "Installed"
}

def updated() {
    log.debug "Updated"
}

def on() {
    toggleWater("on")
    sendEvent(name: "switch", value: "on", descriptionText: "${device.displayName} is on")
}

def off() {
    toggleWater("off")
    sendEvent(name: "switch", value: "off", descriptionText: "${device.displayName} is off")
}

def saveToken(token)
{
    device.updateDataValue("token", token)
}

def currentToken()
{
    return device.getDataValue("token")
}

private toggleWater(String toggle)
{
    def deviceId = delta_device_id
    def deltaToken = "Bearer ${currentToken()}"
    def apiUrl = "https://device.legacy.deltafaucet.com/api/device/toggleWater?deviceId=${deviceId}&toggle=${toggle}"
    def headers = [
        'Authorization': deltaToken, 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36',
        'Referer': 'https://device.legacy.deltafaucet.com/'
    ]
    
    try
    {
        def response
        httpPost(uri: apiUrl, headers: headers)
        
        {
            resp ->
            response = resp
        }
 
        log.debug response.status
        log.debug response.data

        if(response?.status?.toInteger() == 200)
        {
            log.debug "Toggle water ${toggle} successful"
        }
        else
        {
           log.error "Toggle water ${toggle} failed: ${response.status}"
        }
    }
    catch (Exception e)
        {
            log.error "Error toggling water: ${e.message}"
        }
}
