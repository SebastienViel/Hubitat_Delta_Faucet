/*

Copyright 2022 - tomw

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-------------------------------------------

This driver was written with the help of OpenAI, tomw and the hubitat community based on the following script from veelar:
https://gist.github.com/velaar/4e18a200c1db7b06109a3fd840838684

Change history:

1.0 - SebastienViel - Initial release.

*/

import groovy.json.JsonSlurper
import groovy.transform.Field

metadata {
    definition(
        name: "Delta Faucet Driver",
        namespace: "SebastienViel",
        author: "SÃ©bastien Viel and TomW",
        importUrl: "https://raw.githubusercontent.com/SebastienViel/Hubitat_Delta_Faucet/main/Hubitat_Delta_Faucet_Driver") {

        capability "Switch"
        
        command "saveToken", ["token"]
    }
}

preferences {
    input("delta_device_id", "text", title: "Delta Device ID", description: "Enter Delta Device ID", defaultValue: "", required: true, displayDuringSetup: true)
    input(name: "logEnable", type: "bool", title: "Enable debug logging", defaultValue: true)
}

def installed() {
    if (logEnable){log.debug "Installed"}
}

def updated() {
    if (logEnable){log.debug "Updated"}
}

def on() {
    toggleWater("on")
    sendEvent(name: "switch", value: "on", descriptionText: "${device.displayName} is on")
}

def off() {
    toggleWater("off")
    sendEvent(name: "switch", value: "off", descriptionText: "${device.displayName} is off")
}

def saveToken(token)
{
    device.updateDataValue("token", token)
}

def currentToken()
{
    return device.getDataValue("token")
}

private toggleWater(String toggle)
{
    def deviceId = delta_device_id
    def deltaToken = "Bearer ${currentToken()}"
    def apiUrl = "https://device.legacy.deltafaucet.com/api/device/toggleWater?deviceId=${deviceId}&toggle=${toggle}"
    def headers = [
        'Authorization': deltaToken, 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36',
        'Referer': 'https://device.legacy.deltafaucet.com/'
    ]
    
    try
    {
        def response
        httpPost(uri: apiUrl, headers: headers)
        
        {
            resp ->
            response = resp
        }
 
        if (logEnable){log.debug response.status}
        if (logEnable){log.debug response.data}

        if(response?.status?.toInteger() == 200)
        {
            if (logEnable){log.debug "Toggle water ${toggle} successful"}
        }
        else
        {
            if (logEnable){log.error "Toggle water ${toggle} failed: ${response.status}"}
        }
    }
    catch (Exception e)
        {
            log.error "Error toggling water: ${e.message}"
        }
}
